#include <avr/io.h>
#include <avr/interrupt.h>
#include <stdlib.h>
#include <string.h>
#include <stdio.h>
char m[] = "1111222233334444555566667777888899990000AAAABBBBCCCCDDDDEEEEFFFF";
int k2 = 0;
int k3 = 0;
int ig = 0;
int l3 = 0;
char c3[4] = "";
int co = 0;
char zap[40] = "";
char otv[40] = "";
int tim = 0;
int ltime = 0;
char crc1[5];
int crc2 = 0;
int crc3 = 0;
char ss[2];
void rw(char *zap) {
	for (int i = 0; i< 7; i+= 2){
		ss[0] = zap[i];
		ss[1] = zap[i+1];
		crc2 += strtol(ss, NULL, 16);
	}
	for (int i = 8; i< 12; i++){
		crc1[i - 8] = zap[i];
	}
	if (strtol(crc1, NULL, 16) != crc2){
		ig = 0;
		memset(zap, 0, sizeof(zap));
		memset(crc1, 0, sizeof(crc1));
		crc2 = 0;
		return;
	}
	memset(crc1, 0, sizeof(crc1));
	crc2 = 0;
	for (int i = 0; i < 4; i++) {
		otv[i] = zap[i];
	}
	char adr[4] = ""; 
	for (int i = 4; i < 8; i++) {
		adr[i - 4] = zap[i]; 
	}

	int ind = strtol(adr, NULL, 16);
	if (ind > 15){
		ig = 0;
		memset(zap, 0, sizeof(zap));
		memset(crc1, 0, sizeof(crc1));
		crc2 = 0;
		return;
	}
	int j = 4;
	for (int i = 4 * ind; i < 4 * ind + 4; i++) {
		otv[j++] = m[i];
	}
	for (int i = 0; i < 7;i+=2){
		ss[0] = otv[i];
		ss[1] = otv[i+1];
		crc3 += strtol(ss, NULL, 16);
	}
	sprintf(crc1, "%04X", crc3);
	for (int i = 8; i < 12;i++){
		otv[i] = crc1[i-8];
	}
	for (int i = 0; i < 12; i++) { 
		UDR0 = otv[i];
		while (!(UCSR0A & (1 << UDRE0))) { 
			
		}
	}
	UDR0 = '\n';
	while (!(UCSR0A & (1 << UDRE0))) { 
	
	}
	
	ig = 0;
	memset(crc1, 0, sizeof(crc1));
	crc2 = 0;
	crc3 = 0;
	memset(zap, 0, sizeof(zap)); 
	memset(otv, 0, sizeof(otv));
}
void ww(char *zap){
	for (int i = 0; i< 11; i+=2){
		ss[0] = zap[i];
		ss[1] = zap[i+1];
		crc2 += strtol(ss, NULL, 16);
	}
	for (int i = 12; i< 16; i++){
		crc1[i - 12] = zap[i];
	}
	if (strtol(crc1, NULL, 16) != crc2){
		ig = 0;
		memset(zap, 0, sizeof(zap));
		memset(crc1, 0, sizeof(crc1));
		crc2 = 0;
		k2 = 0;
		return;
	}
	memset(crc1, 0, sizeof(crc1));
	crc2 = 0;
	
	for (int i = 0; i < 16; i++){
		otv[i] = zap[i];
	}
	char adr[4] = "";
	for (int i = 4; i < 8; i++) {
		adr[i - 4] = zap[i];
	}
	int ind = strtol(adr, NULL, 16);
	if (ind > 15){
		ig = 0;
		k2 = 0;
		memset(zap, 0, sizeof(zap));
		memset(otv, 0, sizeof(otv));
		return;
	}
	char word[4] = "";
	int j = 0;
	for (int i = 8; i < 12; i++){
		word[j++] = zap[i];
	}
	j = 0;
	for (int i = 4 * ind; i < 4 * ind + 4; i++) {
		m[i] = word[j++];
	}
	for (int i = 0; i < 16; i++) {
		UDR0 = otv[i];
		while (!(UCSR0A & (1 << UDRE0))) {
			
		}
	}
	UDR0 = '\n';
	while (!(UCSR0A & (1 << UDRE0))) {
		
	}
	ig = 0;
	k2 = 0;
	memset(crc1, 0, sizeof(crc1));
	crc2 = 0;
	crc3 = 0;
	memset(zap, 0, sizeof(zap));
	memset(otv, 0, sizeof(otv));
	
}
void wws(char *zap){
	for (int i = 0; i< l3-5; i+=2){
		ss[0] = zap[i];
		ss[1] = zap[i+1];
		crc2 += strtol(ss, NULL, 16);
	}
	for (int i = l3-4; i< l3; i++){
		crc1[i - l3+4] = zap[i];
	}
	if (strtol(crc1, NULL, 16) != crc2){
		ig = 0;
		k3 = 0;
		l3 = 0;
		memset(c3, 0, sizeof(c3));
		co = 0;
		memset(zap, 0, sizeof(zap));
		memset(crc1, 0, sizeof(crc1));
		crc2 = 0;
		k3 = 0;
		return;
	}
	memset(crc1, 0, sizeof(crc1));
	crc2 = 0;
	for (int i = 0; i < 12; i++){
		otv[i] = zap[i];
	}
	for (int i = 0; i < 11;i+=2){
		ss[0] = otv[i];
		ss[1] = otv[i+1];
		crc3 += strtol(ss, NULL, 16);
	}
	sprintf(crc1, "%04X", crc3);
	for (int i = 12; i < 16;i++){
		otv[i] = crc1[i-12];
	}
	
	char adr[4] = "";
	for (int i = 4; i < 8; i++) {
		adr[i - 4] = zap[i];
	}
	int ind = strtol(adr, NULL, 16);
	if (ind + co > 15){
		ig = 0;
		k3 = 0;
		l3 = 0;
                crc3 = 0;
		memset(c3, 0, sizeof(c3));
		co = 0;
		memset(zap, 0, sizeof(zap));
		memset(otv, 0, sizeof(otv));
		return;
	}
	for (int i = 0; i < co; i++){
		char word[4] = "";
		int j = 0;
		for (int z = 14 + i*4; z < 14 + i*4 + 4; z++){
			word[j++] = zap[z];
		}
		j = 0;
		for (int z = 4 * ind; z < 4 * ind + 4; z++) {
			m[z] = word[j++];
		}
		ind++;
	}
	for (int i = 0; i < 16; i++) {
		UDR0 = otv[i];
		while (!(UCSR0A & (1 << UDRE0))) {
			
		}
	}
	UDR0 = '\n';
	while (!(UCSR0A & (1 << UDRE0))) {
		
	}
	ig = 0;
	k3 = 0;
	l3 = 0;
	memset(c3, 0, sizeof(c3));
	co = 0;
	memset(crc1, 0, sizeof(crc1));
	crc2 = 0;
	crc3 = 0;
	memset(zap, 0, sizeof(zap));
	memset(otv, 0, sizeof(otv));
}
ISR(TIMER1_COMPA_vect){
	if (sizeof(zap) > 1){
		if (tim == 0){
			tim += 1;
			ltime = sizeof(zap);
		}
		else if(ltime == sizeof(zap)){
			memset(zap, 0, sizeof(zap));
			ig = 0;
		}
	}
}


ISR (USART_RX_vect)
{
	char y = UDR0;
	if (ig < 12){
		zap[ig++] = y;
	}
	else if (ig==12){
		if (zap[3] == '1'){
			rw(zap);
		}
		else if (zap[3] == '2'){
			k2 = 1;
		}
		else if (zap[3] == '3'){
			k3 = 1;
			c3[0] = zap[8];
			c3[1] = zap[9];
			c3[2] = zap[10];
			c3[3] = zap[11];
			co = strtol(c3, NULL, 16);
			l3 = ig + 6 + co*4;
		}
		
	}
	if (k2 == 1){
		if (ig < 16){
			zap[ig++] = y;
		}
		else if (ig == 16){
			ww(zap);
		}
	}
	if (k3 == 1){
		if (ig < l3){
			zap[ig++] = y;
		}
		else if (ig == l3){
			wws(zap);
		}
	}
}
int main(void)
{
	UBRR0 = 103;
	UCSR0B |= (0<<TXCIE0)|(1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
	TCCR1B |= (1<<WGM12)|(1<<CS10)|(1<<CS12);
	OCR1A = 15625;
	TIMSK1 |= (1<<OCIE1A);
	sei();
	while (1)
	{
			
	}
}